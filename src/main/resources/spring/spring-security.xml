<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/security
            http://www.springframework.org/schema/security/spring-security.xsd">

    <http use-expressions="true">
        <intercept-url pattern="/users**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/users/**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/account/**" access="hasRole('ROLE_USER')"/>
        <intercept-url pattern="/projects/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')"/>
        <intercept-url pattern="/invitations/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')"/>
        <form-login login-page="/login"/>

        <logout
                logout-success-url="/logout"
                logout-url="/perform_logout"
                delete-cookies="JSESSIONID" />
    </http>

    <authentication-manager>
        <authentication-provider>
            <password-encoder hash="bcrypt"/>
            <jdbc-user-service data-source-ref="dataSource"
                               authorities-by-username-query="SELECT user.email, role.name FROM user
                        JOIN user_role on user.id = user_role.users_id
                        JOIN role on user_role.roles_id = role.id
                        WHERE user.email = ?"
                               users-by-username-query="SELECT user.email,password,enabled FROM user WHERE user.email = ?"/>
        </authentication-provider>
    </authentication-manager>

</beans:beans>